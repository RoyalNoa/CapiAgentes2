.agentesPage {
  position: relative;
  min-height: 100vh;
  height: 100vh;
  padding: clamp(18px, 2vw, 28px);
  display: flex;
  flex-direction: column;
  gap: clamp(20px, 2.2vw, 28px);
  color: var(--chat-text);
  font-family: var(--chat-ui-font);
  background:
    radial-gradient(circle at 18% 0%, rgba(0, 255, 255, 0.1), transparent 55%),
    radial-gradient(circle at 82% 0%, rgba(0, 255, 136, 0.08), transparent 60%),
    linear-gradient(135deg, rgba(0, 14, 32, 0.96), rgba(0, 8, 18, 0.94));
  overflow: hidden;
}

.agentesPage::before {
  content: '';
  position: absolute;
  inset: clamp(-22px, -2vw, -12px);
  background-image:
    linear-gradient(rgba(0, 255, 255, 0.05) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 255, 0.05) 1px, transparent 1px);
  background-size: 46px 46px;
  opacity: 0.35;
  pointer-events: none;
}

.agentesPage::after {
  content: '';
  position: absolute;
  inset: clamp(-18px, -1.4vw, -10px);
  border: 1px solid rgba(0, 255, 255, 0.18);
  clip-path: polygon(28px 0, calc(100% - 28px) 0, 100% 32px, 100% calc(100% - 28px), calc(100% - 28px) 100%, 28px 100%, 0 calc(100% - 32px), 0 28px);
  box-shadow:
    0 0 60px rgba(0, 255, 255, 0.18),
    inset 0 0 36px rgba(0, 255, 255, 0.08);
  pointer-events: none;
}

.agentesPage > * {
  position: relative;
  z-index: 1;
}

.operational,
.statusActive,
.connected,
.positive,
.tilePositive {
  color: var(--chat-success);
  text-shadow: 0 0 14px rgba(0, 255, 136, 0.6);
}

.statusProcessing,
.warning,
.tileWarning {
  color: var(--chat-warning);
  text-shadow: 0 0 12px rgba(247, 171, 47, 0.45);
}

.error,
.statusError,
.disconnected {
  color: var(--chat-error);
  text-shadow: 0 0 14px rgba(255, 90, 107, 0.6);
}

.statusIdle,
.statPositive {
  color: var(--chat-muted);
  text-shadow: none;
}

.leftPanelContainer,
.rightPanelContainer {
  display: flex;
  flex-direction: column;
  gap: clamp(18px, 2vw, 26px);
  flex: 1 1 auto;
  min-height: 0;
  max-height: 100%;
  overflow-y: auto;
  padding-right: clamp(4px, 0.8vw, 12px);
}

.centerPanelContainer {
  display: flex;
  flex-direction: column;
  gap: clamp(18px, 2vw, 26px);
  flex: 1 1 auto;
  min-height: 0;
  max-height: 100%;
  overflow: hidden;
}

.leftPanelContainer > :first-child {
  flex: 1 1 auto;
  min-height: 0;
}

.rightPanelContainer > :first-child {
  flex: 1 1 auto;
  min-height: 0;
}

.graphSection {
  position: relative;
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  min-height: 0;
  padding: clamp(16px, 1.6vw, 22px);
  background:
    linear-gradient(135deg, rgba(0, 20, 44, 0.9), rgba(0, 10, 28, 0.94));
  border: 1px solid var(--chat-border);
  clip-path: polygon(22px 0, calc(100% - 22px) 0, 100% 26px, 100% calc(100% - 22px), calc(100% - 22px) 100%, 22px 100%, 0 calc(100% - 26px), 0 22px);
  box-shadow:
    0 24px 60px rgba(0, 0, 0, 0.55),
    inset 0 0 28px rgba(0, 255, 255, 0.07);
  overflow: hidden;
}

.graphSection::before {
  content: '';
  position: absolute;
  inset: 0;
  background-image:
    linear-gradient(rgba(0, 255, 255, 0.04) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 255, 0.04) 1px, transparent 1px);
  background-size: 52px 52px;
  opacity: 0.35;
  pointer-events: none;
}

.graphSection > * {
  position: relative;
  z-index: 1;
}

.toolbar {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: clamp(18px, 2.4vw, 28px);
  padding: clamp(18px, 1.8vw, 24px) clamp(22px, 2.6vw, 30px);
  background:
    linear-gradient(135deg, rgba(0, 40, 80, 0.9), rgba(0, 20, 46, 0.92));
  border: 1px solid var(--chat-border);
  clip-path: polygon(0 0, calc(100% - 26px) 0, 100% 32px, 100% 100%, 0 100%);
  box-shadow:
    0 0 28px rgba(0, 255, 255, 0.16),
    inset 0 0 20px rgba(0, 255, 255, 0.08);
  overflow: hidden;
}

.toolbar::before {
  content: '';
  position: absolute;
  inset: 0;
  background:
    radial-gradient(circle at 18% 30%, rgba(0, 255, 255, 0.12), transparent 60%),
    radial-gradient(circle at 80% 20%, rgba(0, 255, 136, 0.06), transparent 55%);
  opacity: 0.55;
  pointer-events: none;
}

.toolbarLeft {
  max-width: 60%;
  display: flex;
  flex-direction: column;
  gap: 10px;
  z-index: 1;
}

.toolbarEyebrow {
  font-family: var(--chat-heading-font);
  font-size: 11px;
  letter-spacing: 0.28em;
  text-transform: uppercase;
  color: var(--chat-muted-soft);
}

.toolbarTitle {
  margin: 0;
  font-family: var(--chat-heading-font);
  font-size: clamp(22px, 2.4vw, 28px);
  letter-spacing: 0.16em;
  color: var(--chat-primary-alt);
  text-shadow:
    0 0 18px rgba(0, 255, 255, 0.4),
    0 0 38px rgba(0, 255, 255, 0.2);
}

.toolbarHint {
  margin: 0;
  font-size: 13px;
  line-height: 1.5;
  color: var(--chat-muted);
}

.toolbarStats {
  display: flex;
  flex-wrap: wrap;
  gap: 18px;
  font-size: 12px;
  letter-spacing: 0.12em;
  color: var(--chat-muted);
  font-family: var(--chat-heading-font);
}

.toolbarActions {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  justify-content: flex-end;
  z-index: 1;
}

.primaryAction,
.secondaryButton,
.ghostButton,
.inspectButton,
.toggleButton {
  position: relative;
  padding: 10px 18px;
  font-family: var(--chat-heading-font);
  letter-spacing: 0.22em;
  text-transform: uppercase;
  font-size: 11px;
  border: 1px solid var(--chat-border);
  clip-path: polygon(12px 0, calc(100% - 12px) 0, 100% 30%, 100% 100%, calc(100% - 12px) 100%, 12px 100%, 0 70%, 0 30%);
  background: rgba(0, 24, 48, 0.82);
  color: var(--chat-primary-alt);
  box-shadow: inset 0 0 18px rgba(0, 255, 255, 0.12);
  cursor: pointer;
  transition: var(--chat-transition);
}

.primaryAction:hover,
.secondaryButton:hover,
.ghostButton:hover,
.inspectButton:hover,
.toggleButton:hover {
  box-shadow:
    inset 0 0 22px rgba(0, 255, 255, 0.18),
    0 0 22px rgba(0, 255, 255, 0.18);
  color: var(--chat-text);
}

.primaryAction {
  background: linear-gradient(135deg, rgba(0, 255, 136, 0.22), rgba(0, 162, 255, 0.32));
  border-color: rgba(0, 255, 255, 0.38);
  color: var(--chat-text);
  text-shadow: 0 0 14px rgba(0, 255, 255, 0.4);
}

.secondaryButton {
  background: rgba(0, 18, 36, 0.82);
  border-color: rgba(0, 255, 255, 0.22);
}

.ghostButton,
.inspectButton {
  background: rgba(0, 16, 32, 0.6);
  border-color: rgba(0, 255, 255, 0.18);
  color: var(--chat-muted);
}

.inspectButton {
  letter-spacing: 0.16em;
  font-size: 10px;
}

.toggleButton {
  align-self: stretch;
  font-size: 10px;
  letter-spacing: 0.2em;
  text-align: center;
}

.toggleEnabled {
  background: linear-gradient(135deg, rgba(255, 90, 107, 0.22), rgba(120, 16, 32, 0.45));
  border-color: rgba(255, 90, 107, 0.45);
  color: var(--chat-error);
  box-shadow: 0 0 24px rgba(255, 90, 107, 0.22);
}

.toggleDisabled {
  opacity: 0.75;
  color: var(--chat-muted);
}

.agentGrid {
  flex: 1 1 auto;
  min-height: 0;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: clamp(18px, 2vw, 26px);
  overflow-y: auto;
  padding-right: clamp(4px, 0.8vw, 12px);
}

.agentCard {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 16px;
  padding: clamp(18px, 1.8vw, 24px);
  background:
    linear-gradient(135deg, rgba(0, 24, 48, 0.85), rgba(0, 12, 28, 0.9));
  border: 1px solid var(--chat-border);
  clip-path: polygon(18px 0, calc(100% - 18px) 0, 100% 30px, 100% calc(100% - 18px), calc(100% - 18px) 100%, 18px 100%, 0 calc(100% - 30px), 0 18px);
  box-shadow:
    0 18px 40px rgba(0, 0, 0, 0.55),
    inset 0 0 20px rgba(0, 255, 255, 0.08);
  overflow: hidden;
  transition: var(--chat-transition);
}

.agentCard::before {
  content: '';
  position: absolute;
  inset: 10px;
  border: 1px solid rgba(0, 255, 255, 0.1);
  opacity: 0.5;
  pointer-events: none;
}

.agentCardActive {
  border-color: var(--chat-border-strong);
  box-shadow:
    0 20px 56px rgba(0, 255, 255, 0.22),
    inset 0 0 24px rgba(0, 255, 255, 0.12);
}

.agentCardHeader {
  display: flex;
  justify-content: space-between;
  gap: 12px;
}

.agentName {
  margin: 0;
  font-family: var(--chat-heading-font);
  font-size: 16px;
  letter-spacing: 0.18em;
  color: var(--chat-primary);
}

.agentDescription {
  margin: 0;
  font-size: 12px;
  line-height: 1.5;
  color: var(--chat-muted);
}

.agentStatus {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 10px;
  border: 1px solid var(--chat-border);
  background: rgba(0, 24, 48, 0.7);
  font-size: 10px;
  letter-spacing: 0.22em;
  text-transform: uppercase;
  font-family: var(--chat-heading-font);
  clip-path: polygon(10px 0, calc(100% - 10px) 0, 100% 30%, 100% 100%, calc(100% - 10px) 100%, 10px 100%, 0 70%, 0 30%);
}

.agentMetricsGrid {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 14px;
}

.metricLabel {
  font-family: var(--chat-heading-font);
  font-size: 10px;
  letter-spacing: 0.18em;
  text-transform: uppercase;
  color: var(--chat-muted-soft);
}

.metricValue {
  font-family: 'Courier New', monospace;
  font-size: 13px;
  letter-spacing: 0.08em;
  color: var(--chat-text);
  text-shadow: 0 0 12px rgba(0, 255, 255, 0.3);
}

.agentCardActions {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  justify-content: space-between;
  align-items: center;
  margin-top: auto;
}

.toggleButton:disabled {
  opacity: 0.55;
  cursor: not-allowed;
  box-shadow: none;
}

.emptyState {
  padding: clamp(32px, 6vw, 48px);
  text-align: center;
  font-family: var(--chat-heading-font);
  letter-spacing: 0.24em;
  text-transform: uppercase;
  color: var(--chat-muted);
  border: 1px dashed var(--chat-border);
  clip-path: polygon(18px 0, calc(100% - 18px) 0, 100% calc(100% - 18px), calc(100% - 18px) 100%, 18px 100%, 0 82%, 0 18px);
  background: rgba(0, 16, 32, 0.65);
}

.panelBlock {
  position: relative;
  padding: clamp(18px, 1.8vw, 24px);
  background:
    linear-gradient(135deg, rgba(0, 28, 56, 0.9), rgba(0, 14, 32, 0.92));
  border: 1px solid var(--chat-border);
  clip-path: polygon(16px 0, calc(100% - 16px) 0, 100% 28px, 100% calc(100% - 16px), calc(100% - 16px) 100%, 16px 100%, 0 calc(100% - 28px), 0 16px);
  box-shadow:
    0 18px 40px rgba(0, 0, 0, 0.55),
    inset 0 0 20px rgba(0, 255, 255, 0.08);
  flex: 1 1 auto;
  min-height: 0;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.panelBlock::before {
  content: '';
  position: absolute;
  inset: 10px;
  border: 1px solid rgba(0, 255, 255, 0.1);
  opacity: 0.45;
  pointer-events: none;
}

.panelBlockFlush {
  padding: 0;
  clip-path: polygon(0 0, calc(100% - 18px) 0, 100% 28px, 100% 100%, 0 100%);
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
}

.panelBlockFlush > * {
  flex: 1 1 auto;
  min-height: 0;
}

@media (max-width: 1440px) {
  .toolbar {
    flex-direction: column;
    align-items: stretch;
  }

  .toolbarLeft {
    max-width: 100%;
  }

  .toolbarActions {
    justify-content: flex-start;
  }
}

@media (max-width: 1024px) {
  

  

  .agentMetricsGrid {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 768px) {
  .agentesPage {
    padding: clamp(16px, 4vw, 22px);
  }

  .toolbarActions,
  .agentCardActions {
    flex-direction: column;
    align-items: stretch;
  }

  .primaryAction,
  .secondaryButton,
  .ghostButton,
  .inspectButton,
  .toggleButton {
    width: 100%;
    text-align: center;
  }

  

  .agentGrid {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 560px) {
  

  .toolbarTitle {
    font-size: 18px;
  }
}

.agentGrid::-webkit-scrollbar {
  width: 6px;
}

.agentGrid::-webkit-scrollbar-thumb {
  background: rgba(0, 255, 255, 0.28);
  border-radius: 999px;
}

.agentGrid::-webkit-scrollbar-track {
  background: rgba(0, 32, 48, 0.24);
}

/* Toolbar minimal display */
.toolbar {
  position: relative;
  display: block;
  min-height: clamp(24px, 3vh, 40px);
  padding: 0;
  background:
    linear-gradient(135deg, rgba(0, 20, 44, 0.9), rgba(0, 10, 28, 0.94));
  border: 1px solid var(--chat-border);
  clip-path: polygon(22px 0, calc(100% - 22px) 0, 100% 26px, 100% calc(100% - 22px), calc(100% - 22px) 100%, 22px 100%, 0 calc(100% - 26px), 0 22px);
  box-shadow:
    0 12px 28px rgba(0, 0, 0, 0.45),
    inset 0 0 16px rgba(0, 255, 255, 0.06);
}

.toolbar::before,
.toolbarLeft,
.toolbarEyebrow,
.toolbarTitle,
.toolbarHint,
.toolbarStats,
.toolbarActions,
.primaryAction,
.secondaryButton,
.ghostButton {
  display: none !important;
}

